!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("remotestoragejs"));else if("function"==typeof define&&define.amd)define(["remotestoragejs"],t);else{var o=t("object"==typeof exports?require("remotestoragejs"):e.RemoteStorage);for(var i in o)("object"==typeof exports?exports:e)[i]=o[i]}}(this,function(e){return function(e){function t(i){if(o[i])return o[i].exports;var r=o[i]={exports:{},id:i,loaded:!1};return e[i].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var o={};return t.m=e,t.c=o,t.p="",t(0)}([function(e,t,o){"use strict";var i=o(1),r=o(2);i.defineModule("xmpp-credentials",function(e){return e.declareType("credentials",{type:"object",description:"XMPP credentials file",required:["username","password","server","resource"],additionalProperties:!1,properties:{uri:{type:"string",description:"unique identifier complete with URI prefix. ie. xmpp:username@host.org"},username:{type:"string"},password:{type:"string"},server:{type:"uri"},resource:{type:"string"},port:{type:"number"}}}),{exports:new r("xmpp-credentials",e)}})},function(t,o){t.exports=e},function(e,t){(function(t){"use strict";function o(e,t){if(this.algorithmPrefix="AES-CCM-128:",this.changeHandlers=[],this.moduleName=e,this.privClient=t,"string"!=typeof e)throw new Error("moduleName should be a string");if("object"!==("undefined"==typeof t?"undefined":i(t)))throw new Error("privClient should be a (private) base client");t.on("change",function(t){if(t.path===e+"-config")for(var o=0,i=this.changeHandlers.length;o<i;o++)this.changeHandlers[o]()}.bind(this))}var i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};o.prototype.setConfig=function(e,t){if(console.log("setConfig",this.moduleName,e,t,JSON.stringify(t)),"object"!==("undefined"==typeof t?"undefined":i(t)))throw"config should be an object";if(e&&"undefined"==typeof sjcl)throw"please include sjcl.js (the Stanford JS Crypto Library) in your app";"sockethub-credentials"===this.moduleName||"irc-credentials"===this.moduleName?t["@context"]="http://remotestorage.io/spec/modules/"+this.moduleName+"/credentials":t["@context"]="http://remotestorage.io/spec/modules/"+this.moduleName+"/config";var o=this.privClient.validate(t);return o.valid?(t=JSON.stringify(t),"string"==typeof e&&(t=this.algorithmPrefix+sjcl.encrypt(e,t)),this.privClient.storeFile("application/json",this.moduleName+"-config",t)):Promise.reject("Please follow the config schema - "+JSON.stringify(o))},o.prototype.getConfig=function(e,t){if(e&&"undefined"==typeof sjcl)throw"please include sjcl.js (the Stanford JS Crypto Library) in your app";return this.privClient.getFile(this.moduleName+"-config",t).then(function(t){if("object"!==("undefined"==typeof t?"undefined":i(t))||"string"!=typeof t.data)throw this.moduleName+"-config not found";if("string"==typeof e){if(t.data.substring(0,this.algorithmPrefix.length)!==this.algorithmPrefix)throw this.moduleName+"-config is not encrypted, or encrypted with a different algorithm";try{t.data=JSON.parse(sjcl.decrypt(e,t.data.substring(this.algorithmPrefix.length))),delete t.data["@context"]}catch(e){throw"could not decrypt "+this.moduleName+"-config with that password"}}else{if(t.data.substring(0,this.algorithmPrefix.length)===this.algorithmPrefix)throw this.moduleName+"-config is encrypted, please specify a password for decryption";try{t.data=JSON.parse(t.data),delete t.data["@context"]}catch(e){throw"could not parse "+this.moduleName+"-config as unencrypted JSON"}}return t.data}.bind(this))},o.prototype.onceConfig=function(e){return this.getConfig(e,2e4).then(void 0,function(t){var o=Promise.defer();return this.privClient.on("change",function(t){this.onceConfig(e).then(function(e){o.resolve(e)})}.bind(this)),o.promise}.bind(this))},o.prototype.on=function(e,t){"change"===e&&this.changeHandlers.push(t)},"undefined"!=typeof t&&(t.CredentialsStore=o),e.exports=o}).call(t,function(){return this}())}])});